{"version":3,"sources":["hoc/withAuthRedirect.js","assets/images/user.png","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_thesaddest_Desktop_01_first_project_network_react_practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_thesaddest_Desktop_01_first_project_network_react_practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_thesaddest_Desktop_01_first_project_network_react_practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_thesaddest_Desktop_01_first_project_network_react_practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_thesaddest_Desktop_01_first_project_network_react_practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","__webpack_require__","p","descriptionBlock","profileImg","mainPhoto","contact","postsBlock","posts","content","item","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","Field","placeholder","name","type","component","Input","validate","TextArea","keys","contacts","map","s","Contact","_ref2","contactTitle","contactValue","ProfileData","_ref3","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileStatusWithHooks","ProfileInfo_ProfileDataForm","formData","then","initialValues","ProfileInfo_ProfileData","Post","message","likesCount","maxLength100","maxLengthCreator","MyPosts","memo","postsElements","MyPosts_Post_Post","id","AddPostFormRedux","values","addPost","newPostText","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","router","params","authorisedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","compose","location","useLocation","navigate","useNavigate","useParams"],"mappings":"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","file":"static/js/3.8a20f02d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.ded1dfef.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__nYuRY\",\"profileImg\":\"ProfileInfo_profileImg__18YOU\",\"mainPhoto\":\"ProfileInfo_mainPhoto__10nxm\",\"contact\":\"ProfileInfo_contact__wGpSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2YO9p\",\"posts\":\"MyPosts_posts__3QPuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__9PfKO\",\"item\":\"Post_item__1tIe1\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Input, TextArea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error &&\r\n        <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full Name:</b>\r\n            <Field placeholder={'Full Name'}\r\n                   name={'fullName'}\r\n                   type={'text'}\r\n                   component={Input}\r\n            validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job?:</b>\r\n            <Field name={'lookingForAJob'}\r\n                   type={'checkbox'}\r\n                   component={Input}\r\n                   validate={[]}/>\r\n\r\n        </div>\r\n        <div>\r\n            <b>My skills:</b>\r\n            <Field placeholder={'my Professional skills'}\r\n                   name={'lookingForAJobDescription'}\r\n                   type={'text'}\r\n                   component={TextArea}\r\n                   validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>\r\n            <Field placeholder={'Tell the world about you'}\r\n                   name={'aboutMe'}\r\n                   type={'text'}\r\n                   component={TextArea}\r\n                   validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: <Field placeholder={key}\r\n                                 name={'contacts.' + key}\r\n                                 type={'text'}\r\n                                 component={TextArea}\r\n                                 validate={[]}/></b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full Name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job?:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nconst Post = (props) =>{\r\n  return (\r\n  <div className={s.item}>\r\n    <img src=\"https://i.pinimg.com/474x/32/3d/4c/323d4c7917cff0987eecbbf7068ddaee.jpg\"></img>\r\n    {props.message}\r\n    <div>\r\n      <span>like {props.likesCount}</span>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} placeholder={'Напишите, о чем думаете'}\r\n                       name={'newPostText'} validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'myPostsAddNewPostForm'})(AddPostForm)\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) =>{\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                   isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useLocation, useNavigate, useParams} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (<Component {...props} router={{location, navigate, params}}/>);\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}